version: "3.7"

services:
  db:
    image: postgres:latest
    restart: always
    tty: true
    ports:
      - "5434:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    networks:
      - app-network

  nginx:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - static_volume:/app/backend/server/static
      - ./docker/nginx/production:/etc/nginx/conf.d
      - ./docker/nginx/certbot/conf:/etc/letsencrypt
      - ./docker/nginx/certbot/www:/var/www/certbot
    depends_on:
      - backend
    networks:
      - app-network
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./docker/nginx/certbot/conf:/etc/letsencrypt
      - ./docker/nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - app-network
  backend:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    volumes:
      - static_volume:/app/backend/server/static
    environment:
      DB_HOST: db
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      DEBUG: 0

    expose:
      - 8000
    depends_on:
      - db
    networks:
      - app-network

volumes:
  static_volume: {}
  pgdata:
    driver: local

networks:
  app-network:
    driver: bridge
